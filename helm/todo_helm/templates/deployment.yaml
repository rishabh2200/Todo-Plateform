apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Release.Name}}-backend-configmap
data:
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Release.Name}}-postgres-deployment
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: {{.Values.postgres_image}}
        resources: 
          requests:
            memory: {{.Values.requests.memory}}  
            cpu: {{.Values.requests.cpu}} 
          limits:
            memory: {{.Values.limits.memory}}
            cpu: {{.Values.limits.cpu}}
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom: 
            configMapKeyRef:
              name: {{.Release.Name}}-backend-configmap
              key: POSTGRES_DB

        - name: POSTGRES_USER
          valueFrom: 
            configMapKeyRef:
              name: {{.Release.Name}}-backend-configmap
              key: POSTGRES_USER

        - name: POSTGRES_PASSWORD
          valueFrom: 
            configMapKeyRef:
              name: {{.Release.Name}}-backend-configmap
              key: POSTGRES_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: {{.Release.Name}}-postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Release.Name}}-redis-deployment
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: {{.Values.redis_image}}
        resources: 
          requests:
            memory: {{.Values.requests.memory}}  
            cpu: {{.Values.requests.cpu}} 
          limits:
            memory: {{.Values.limits.memory}}
            cpu: {{.Values.limits.cpu}}
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: {{.Release.Name}}-redis-service
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Release.Name}}-backend
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        imagePullPolicy: IfNotPresent
        image: {{.Values.backend_image}}
        resources: 
          requests:
            memory: {{.Values.requests.memory}}  
            cpu: {{.Values.requests.cpu}} 
          limits:
            memory: {{.Values.limits.memory}}
            cpu: {{.Values.limits.cpu}}
        ports:
        - containerPort: 8000
        env:
        - name: NEW_RELIC_CONFIG_FILE
          value: /app/newrelic.ini
        - name: POSTGRES_DB
          valueFrom: 
            secretKeyRef:
              name: global-secrets
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom: 
            secretKeyRef:
              name: global-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: global-secrets
              key: POSTGRES_PASSWORD
        - name: SENDGRID_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: global-secrets
              key: SENDGRID_PASSWORD
        - name: SENTRY_DSN
          valueFrom: 
            secretKeyRef:
              name: global-secrets
              key: SENTRY_DSN
        - name: db_path
          value: {{.Release.Name}}-postgres-service
        - name: redis_path
          value: redis://{{.Release.Name}}-redis-service:6379/0

---
apiVersion: v1
kind: Service
metadata:
  name: {{.Release.Name}}-backend
spec:
  selector:
    app: backend
  type: LoadBalancer  
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      nodePort: 30000

---

apiVersion: autoscaling/v1 
kind: HorizontalPodAutoscaler
metadata:
  name: {{.Release.Name}}-hpa-backend
spec:
  maxReplicas: 5
  minReplicas: 1       
  scaleTargetRef:    
    apiVersion: apps/v1  
    kind: Deployment 
    name: {{.Release.Name}}-backend
  targetCPUUtilizationPercentage:  {{.Values.CpuUtilize}}  


